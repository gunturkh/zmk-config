
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
       &kp TAB       &kp Q       &kp W        &kp E         &kp R    &kp T               &kp Y          &kp U        &kp I       &kp O          &kp P    &kp BACKSPACE
 &hm LCTRL ESC  &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHIFT F    &kp G               &kp H   &hm RSHIFT J  &hm RCTRL K  &hm RALT L  &hm RGUI SEMI         &kp APOS
     &kp LSHFT       &kp Z       &kp X        &kp C         &kp V    &kp B               &kp N          &kp M    &kp COMMA     &kp DOT       &kp FSLH  &mt RSHFT ENTER
                                          &lt 2 ESC   &lt 1 SPACE  &kp TAB            &kp ENTER  &kp BACKSPACE    &kp RALT
            >;
        };

        layer_raise {
            bindings = <
     &trans        &kp N1        &kp N2           &kp N3           &kp N4           &kp N5                &kp N6            &kp N7        &kp N8      &kp N9  &kp N0   &ext_power EP_ON
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4              &kp LEFT          &kp DOWN        &kp UP   &kp RIGHT  &trans  &ext_power EP_OFF
     &reset   &bootloader       &trans           &trans           &trans           &trans            &kp C_PREV      &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &trans  &ext_power EP_TOG
                                                  &trans           &trans           &trans                &trans  &kp C_PLAY_PAUSE        &trans
            >;
        };

        layer_lower {
            bindings = <
 &kp GRAVE   &kp EXCL    &kp AT         &kp HASH         &kp DLLR        &kp PRCNT            &kp LPAR         &kp RPAR  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
 &kp TILDE  &kp CARET  &kp AMPS  &kp KP_MULTIPLY        &kp MINUS        &kp EQUAL            &kp LBKT         &kp RBKT           &trans    &trans  &kp BSLH  &trans
    &trans     &trans    &trans           &trans        &kp UNDER         &kp PLUS            &kp LBRC         &kp RBRC           &trans    &trans  &kp PIPE  &trans
                                          &trans           &trans           &trans     &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF              
            >;
        };

    };
};
